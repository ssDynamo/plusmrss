{"version":3,"file":"maaxgr-ang-jsoneditor.js","sources":["../../../ang-jsoneditor/src/jsoneditor/jsoneditoroptions.ts","../../../ang-jsoneditor/src/jsoneditor/jsoneditor.component.ts","../../../ang-jsoneditor/src/lib.module.ts","../../../ang-jsoneditor/src/maaxgr-ang-jsoneditor.ts"],"sourcesContent":["\nexport type JsonEditorMode = 'tree' | 'view' | 'form' | 'code' | 'text';\n\nexport interface JsonEditorTreeNode {\n  field: String,\n  value: String,\n  path: String[]\n}\n\nexport interface IError {\n  path: (string | number)[];\n  message: string;\n}\n\nexport class JsonEditorOptions {\n  public ace: any;\n  public ajv: Object;\n\n\n  /**\n   *   {function} onChange  Callback method, triggered\n  on change of contents.\n  Does not pass the contents itself.\n  See also `onChangeJSON` and\n  `onChangeText`.\n   */\n  public onChange: () => void;\n\n  /**\n*   // {function} onChangeJSON  Callback method, triggered\n//     in modes on change of contents,\n//     passing the changed contents\n//     as JSON.\n//     Only applicable for modes\n//     'tree', 'view', and 'form'.\n*/\n  public onChangeJSON: () => void;\n\n\n  public onNodeName: () => void;\n  public onCreateMenu: () => void;\n  public onColorPicker: () => void;\n\n  /**\n*   // {function} onChangeText  Callback method, triggered\n//     in modes on change of contents,\n//     passing the changed contents\n//     as stringified JSON.\n*/\n  public onChangeText: (jsonstr:string) => void;\n\n\n  /**\n   *   {function} onSelectionChange Callback method,\n  triggered on node selection change\n  Only applicable for modes\n  'tree', 'view', and 'form'\n   */\n  public onSelectionChange: () => void;\n\n  /**\n*     {function} onTextSelectionChange Callback method,\n  triggered on text selection change\n  Only applicable for modes\n*/\n  public onTextSelectionChange: () => void;\n\n\n  /**\n   *   // {function} onEvent Callback method, triggered\n    // when an event occurs in\n    // a JSON field or value.\n    // Only applicable for\n    // modes 'form', 'tree' and\n    // 'view'\n   */\n  public onEvent: () => void;\n\n  /**\n* // *   {function} onFocus  Callback method, triggered\n//  when the editor comes into focus,\n//  passing an object {type, target},\n//  Applicable for all modes\n*/\n  public onFocus: () => void;\n\n  // *   {function} onBlur   Callback method, triggered\n  //  when the editor goes out of focus,\n  //  passing an object {type, target},\n  //  Applicable for all modes\n  public onBlur: () => void;\n\n  /**\n*  // *   {function} onClassName Callback method, triggered\n// when a Node DOM is rendered. Function returns\n// a css class name to be set on a node.\n// Only applicable for\n// modes 'form', 'tree' and\n// 'view'\n*/\n  public onClassName: () => void;\n\n  public onEditable: (node: JsonEditorTreeNode | {}) => boolean | { field: boolean, value: boolean };\n\n  /**\n   *   {function} onError   Callback method, triggered\n  when an error occurs\n   */\n  public onError: (error: any) => void;\n  public onModeChange: (newMode: JsonEditorMode, oldMode: JsonEditorMode) => void;\n  public onValidate: (json: Object) => IError[];\n  public onValidationError: (errors: object[]) => void;\n\n  public enableSort: boolean;\n  public enableTransform: boolean;\n  public escapeUnicode: boolean;\n  public expandAll: boolean;\n  public sortObjectKeys: boolean;\n  public history: boolean;\n  public mode: JsonEditorMode;\n  public modes: JsonEditorMode[];\n  public name: String;\n  public schema: Object;\n  public search: boolean;\n  public indentation: Number;\n  public template: Object;\n  public theme: Number;\n  public language: String;\n  public languages: Object;\n\n  /**\n   * Adds main menu bar - Contains format, sort, transform, search etc. functionality. True\n   * by default. Applicable in all types of mode.\n   */\n  public mainMenuBar: boolean;\n\n  /**\n   * Adds navigation bar to the menu - the navigation bar visualize the current position on\n   * the tree structure as well as allows breadcrumbs navigation.\n   * True by default.\n   * Only applicable when mode is 'tree', 'form' or 'view'.\n   */\n  public navigationBar: boolean;\n\n  /**\n   * Adds status bar to the bottom of the editor - the status bar shows the cursor position\n   * and a count of the selected characters.\n   * True by default.\n   * Only applicable when mode is 'code' or 'text'.\n   */\n  public statusBar: boolean;\n\n  constructor() {\n    this.enableSort = true;\n    this.enableTransform = true;\n    this.escapeUnicode = false;\n    this.expandAll = false;\n    this.sortObjectKeys = false;\n    this.history = true;\n    this.mode = 'tree';\n    this.search = true;\n    this.indentation = 2;\n  }\n}\n","import {\n  Component, ElementRef, Input, OnInit, OnDestroy, ViewChild,\n  Output, EventEmitter, forwardRef, ChangeDetectionStrategy\n} from '@angular/core';\nimport * as editor from 'jsoneditor';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { JsonEditorOptions, JsonEditorMode, JsonEditorTreeNode, IError } from './jsoneditoroptions';\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'json-editor',\n  template: `<div [id]=\"id\" #jsonEditorContainer></div>`,\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => JsonEditorComponent),\n      multi: true\n    }\n  ],\n  preserveWhitespaces: false,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\n\nexport class JsonEditorComponent implements ControlValueAccessor, OnInit, OnDestroy {\n  private editor: any;\n  public id = 'angjsoneditor' + Math.floor(Math.random() * 1000000);\n  disabled = false;\n  isFocused = false;\n\n  public optionsChanged = false;\n\n  @ViewChild('jsonEditorContainer', { static: true }) jsonEditorContainer: ElementRef;\n\n  private _data: Object = {};\n\n  @Input() options: JsonEditorOptions = new JsonEditorOptions();\n  @Input('data')\n  set data(value: Object) {\n    this._data = value;\n    if (this.editor) {\n      this.editor.destroy();\n      this.ngOnInit();\n    }\n  }\n  @Input() debug: boolean = false;\n\n  @Output()\n  change: EventEmitter<any> = new EventEmitter<any>();\n  @Output()\n  jsonChange: EventEmitter<any> = new EventEmitter<any>();\n\n  constructor() { }\n\n\n  ngOnInit() {\n    let optionsBefore = this.options;\n    if (!this.optionsChanged && this.editor) {\n      optionsBefore = this.editor.options;\n    }\n\n    if (!this.options.onChangeJSON && this.jsonChange) {\n      this.options.onChangeJSON = this.onChangeJSON.bind(this);\n    }\n    if (!this.options.onChange && this.change) {\n      this.options.onChange = this.onChange.bind(this);\n    }\n    const optionsCopy = Object.assign({}, optionsBefore);\n\n    // expandAll is an option only supported by ang-jsoneditor and not by the the original jsoneditor.\n    delete optionsCopy.expandAll;\n    if (this.debug) {\n      console.log(optionsCopy, this._data);\n    }\n    if (!this.jsonEditorContainer.nativeElement) {\n      console.error(`Can't find the ElementRef reference for jsoneditor)`);\n    }\n\n    if (optionsCopy.mode === 'text' || optionsCopy.mode === 'code') {\n      optionsCopy.onChangeJSON = null;\n    }\n    this.editor = new editor(this.jsonEditorContainer.nativeElement, optionsCopy, this._data);\n\n    if (this.options.expandAll) {\n      this.editor.expandAll();\n    }\n  }\n\n  ngOnDestroy() {\n    this.destroy();\n  }\n\n\n  /**\n   * ngModel\n   * ControlValueAccessor\n   */\n\n  // ControlValueAccessor implementation\n  writeValue(value: any) {\n    this.data = value;\n  }\n\n  // Implemented as part of ControlValueAccessor\n  registerOnChange(fn) {\n    this.onChangeModel = fn;\n  }\n\n  // Implemented as part of ControlValueAccessor.\n  registerOnTouched(fn) {\n    this.onTouched = fn;\n  }\n\n  // Implemented as part of ControlValueAccessor.\n  setDisabledState(isDisabled: boolean): void {\n    this.disabled = isDisabled;\n  }\n\n  // Implemented as part of ControlValueAccessor.\n  private onTouched = () => {\n  };\n\n  // Implemented as part of ControlValueAccessor.\n  private onChangeModel = (e) => {\n  };\n\n  public onChange(e) {\n    if (this.editor) {\n      try {\n        const json = this.editor.get();\n        this.onChangeModel(json);\n        this.change.emit(json);\n      } catch (e) {\n        if (this.debug) {\n          console.log(e);\n        }\n      }\n    }\n  }\n\n  public onChangeJSON(e) {\n    if (this.editor) {\n      try {\n        this.jsonChange.emit(this.editor.get());\n      } catch (e) {\n        if (this.debug) {\n          console.log(e);\n        }\n      }\n    }\n  }\n\n\n  /**\n   * JSON EDITOR FUNCTIONS\n   */\n\n  public collapseAll() {\n    this.editor.collapseAll();\n  }\n\n  public expandAll() {\n    this.editor.expandAll();\n  }\n\n  public focus() {\n    this.editor.focus();\n  }\n\n  public get(): JSON {\n    return this.editor.get();\n  }\n\n  public getMode(): JsonEditorMode {\n    return this.editor.getMode() as JsonEditorMode;\n  }\n\n  public getName(): string {\n    return this.editor.getName();\n  }\n\n  public getText(): string {\n    return this.editor.getText();\n  }\n\n  public set(json: JSON) {\n    this.editor.set(json);\n  }\n\n  public setMode(mode: JsonEditorMode) {\n    this.editor.setMode(mode);\n  }\n\n  public setName(name: string) {\n    this.editor.setName(name);\n  }\n\n  public setSelection(start, end) {\n    this.editor.setSelection(start, end);\n  }\n\n  public getSelection(): any {\n    return this.editor.getSelection();\n  }\n\n  public getValidateSchema(): any {\n    return this.editor.validateSchema;\n  }\n\n  public setSchema(schema: any, schemaRefs: any) {\n    this.editor.setSchema(schema, schemaRefs);\n  }\n\n  public search(query: string) {\n    this.editor.search(query);\n  }\n\n  public setOptions(newOptions: JsonEditorOptions) {\n    if (this.editor) {\n      this.editor.destroy();\n    }\n    this.optionsChanged = true;\n    this.options = newOptions;\n    this.ngOnInit();\n  }\n\n  public update(json: JSON) {\n    this.editor.update(json);\n  }\n\n  public destroy() {\n    this.editor.destroy();\n  }\n\n  public getEditor(){\n    return this.editor;\n  }\n\n  public isValidJson() {\n    try {\n      JSON.parse(this.getText());\n      return true;\n    } catch (e) {\n      return false;\n    }\n  }\n}\n\nexport { JsonEditorOptions, JsonEditorMode, JsonEditorTreeNode, IError };\n","import { NgModule, ModuleWithProviders, CUSTOM_ELEMENTS_SCHEMA, NO_ERRORS_SCHEMA } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { JsonEditorComponent } from './jsoneditor/jsoneditor.component';\nimport { FormsModule } from '@angular/forms';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule\n  ],\n  declarations: [\n    JsonEditorComponent\n  ],\n  exports: [\n    JsonEditorComponent\n  ],\n  schemas: [\n    CUSTOM_ELEMENTS_SCHEMA,\n    NO_ERRORS_SCHEMA\n  ]\n})\nexport class NgJsonEditorModule {\n\n  public static forRoot(): ModuleWithProviders<any> {\n\n    return {\n      ngModule: NgJsonEditorModule,\n      providers: [\n      ]\n    };\n  }\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":[],"mappings":"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"}