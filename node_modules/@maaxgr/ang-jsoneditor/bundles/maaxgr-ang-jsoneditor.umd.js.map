{"version":3,"file":"maaxgr-ang-jsoneditor.umd.js","sources":["../../../ang-jsoneditor/src/jsoneditor/jsoneditoroptions.ts","../../../ang-jsoneditor/src/jsoneditor/jsoneditor.component.ts","../../../ang-jsoneditor/src/lib.module.ts","../../../ang-jsoneditor/src/maaxgr-ang-jsoneditor.ts"],"sourcesContent":["\nexport type JsonEditorMode = 'tree' | 'view' | 'form' | 'code' | 'text';\n\nexport interface JsonEditorTreeNode {\n  field: String,\n  value: String,\n  path: String[]\n}\n\nexport interface IError {\n  path: (string | number)[];\n  message: string;\n}\n\nexport class JsonEditorOptions {\n  public ace: any;\n  public ajv: Object;\n\n\n  /**\n   *   {function} onChange  Callback method, triggered\n  on change of contents.\n  Does not pass the contents itself.\n  See also `onChangeJSON` and\n  `onChangeText`.\n   */\n  public onChange: () => void;\n\n  /**\n*   // {function} onChangeJSON  Callback method, triggered\n//     in modes on change of contents,\n//     passing the changed contents\n//     as JSON.\n//     Only applicable for modes\n//     'tree', 'view', and 'form'.\n*/\n  public onChangeJSON: () => void;\n\n\n  public onNodeName: () => void;\n  public onCreateMenu: () => void;\n  public onColorPicker: () => void;\n\n  /**\n*   // {function} onChangeText  Callback method, triggered\n//     in modes on change of contents,\n//     passing the changed contents\n//     as stringified JSON.\n*/\n  public onChangeText: (jsonstr:string) => void;\n\n\n  /**\n   *   {function} onSelectionChange Callback method,\n  triggered on node selection change\n  Only applicable for modes\n  'tree', 'view', and 'form'\n   */\n  public onSelectionChange: () => void;\n\n  /**\n*     {function} onTextSelectionChange Callback method,\n  triggered on text selection change\n  Only applicable for modes\n*/\n  public onTextSelectionChange: () => void;\n\n\n  /**\n   *   // {function} onEvent Callback method, triggered\n    // when an event occurs in\n    // a JSON field or value.\n    // Only applicable for\n    // modes 'form', 'tree' and\n    // 'view'\n   */\n  public onEvent: () => void;\n\n  /**\n* // *   {function} onFocus  Callback method, triggered\n//  when the editor comes into focus,\n//  passing an object {type, target},\n//  Applicable for all modes\n*/\n  public onFocus: () => void;\n\n  // *   {function} onBlur   Callback method, triggered\n  //  when the editor goes out of focus,\n  //  passing an object {type, target},\n  //  Applicable for all modes\n  public onBlur: () => void;\n\n  /**\n*  // *   {function} onClassName Callback method, triggered\n// when a Node DOM is rendered. Function returns\n// a css class name to be set on a node.\n// Only applicable for\n// modes 'form', 'tree' and\n// 'view'\n*/\n  public onClassName: () => void;\n\n  public onEditable: (node: JsonEditorTreeNode | {}) => boolean | { field: boolean, value: boolean };\n\n  /**\n   *   {function} onError   Callback method, triggered\n  when an error occurs\n   */\n  public onError: (error: any) => void;\n  public onModeChange: (newMode: JsonEditorMode, oldMode: JsonEditorMode) => void;\n  public onValidate: (json: Object) => IError[];\n  public onValidationError: (errors: object[]) => void;\n\n  public enableSort: boolean;\n  public enableTransform: boolean;\n  public escapeUnicode: boolean;\n  public expandAll: boolean;\n  public sortObjectKeys: boolean;\n  public history: boolean;\n  public mode: JsonEditorMode;\n  public modes: JsonEditorMode[];\n  public name: String;\n  public schema: Object;\n  public search: boolean;\n  public indentation: Number;\n  public template: Object;\n  public theme: Number;\n  public language: String;\n  public languages: Object;\n\n  /**\n   * Adds main menu bar - Contains format, sort, transform, search etc. functionality. True\n   * by default. Applicable in all types of mode.\n   */\n  public mainMenuBar: boolean;\n\n  /**\n   * Adds navigation bar to the menu - the navigation bar visualize the current position on\n   * the tree structure as well as allows breadcrumbs navigation.\n   * True by default.\n   * Only applicable when mode is 'tree', 'form' or 'view'.\n   */\n  public navigationBar: boolean;\n\n  /**\n   * Adds status bar to the bottom of the editor - the status bar shows the cursor position\n   * and a count of the selected characters.\n   * True by default.\n   * Only applicable when mode is 'code' or 'text'.\n   */\n  public statusBar: boolean;\n\n  constructor() {\n    this.enableSort = true;\n    this.enableTransform = true;\n    this.escapeUnicode = false;\n    this.expandAll = false;\n    this.sortObjectKeys = false;\n    this.history = true;\n    this.mode = 'tree';\n    this.search = true;\n    this.indentation = 2;\n  }\n}\n","import {\n  Component, ElementRef, Input, OnInit, OnDestroy, ViewChild,\n  Output, EventEmitter, forwardRef, ChangeDetectionStrategy\n} from '@angular/core';\nimport * as editor from 'jsoneditor';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { JsonEditorOptions, JsonEditorMode, JsonEditorTreeNode, IError } from './jsoneditoroptions';\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'json-editor',\n  template: `<div [id]=\"id\" #jsonEditorContainer></div>`,\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => JsonEditorComponent),\n      multi: true\n    }\n  ],\n  preserveWhitespaces: false,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\n\nexport class JsonEditorComponent implements ControlValueAccessor, OnInit, OnDestroy {\n  private editor: any;\n  public id = 'angjsoneditor' + Math.floor(Math.random() * 1000000);\n  disabled = false;\n  isFocused = false;\n\n  public optionsChanged = false;\n\n  @ViewChild('jsonEditorContainer', { static: true }) jsonEditorContainer: ElementRef;\n\n  private _data: Object = {};\n\n  @Input() options: JsonEditorOptions = new JsonEditorOptions();\n  @Input('data')\n  set data(value: Object) {\n    this._data = value;\n    if (this.editor) {\n      this.editor.destroy();\n      this.ngOnInit();\n    }\n  }\n  @Input() debug: boolean = false;\n\n  @Output()\n  change: EventEmitter<any> = new EventEmitter<any>();\n  @Output()\n  jsonChange: EventEmitter<any> = new EventEmitter<any>();\n\n  constructor() { }\n\n\n  ngOnInit() {\n    let optionsBefore = this.options;\n    if (!this.optionsChanged && this.editor) {\n      optionsBefore = this.editor.options;\n    }\n\n    if (!this.options.onChangeJSON && this.jsonChange) {\n      this.options.onChangeJSON = this.onChangeJSON.bind(this);\n    }\n    if (!this.options.onChange && this.change) {\n      this.options.onChange = this.onChange.bind(this);\n    }\n    const optionsCopy = Object.assign({}, optionsBefore);\n\n    // expandAll is an option only supported by ang-jsoneditor and not by the the original jsoneditor.\n    delete optionsCopy.expandAll;\n    if (this.debug) {\n      console.log(optionsCopy, this._data);\n    }\n    if (!this.jsonEditorContainer.nativeElement) {\n      console.error(`Can't find the ElementRef reference for jsoneditor)`);\n    }\n\n    if (optionsCopy.mode === 'text' || optionsCopy.mode === 'code') {\n      optionsCopy.onChangeJSON = null;\n    }\n    this.editor = new editor(this.jsonEditorContainer.nativeElement, optionsCopy, this._data);\n\n    if (this.options.expandAll) {\n      this.editor.expandAll();\n    }\n  }\n\n  ngOnDestroy() {\n    this.destroy();\n  }\n\n\n  /**\n   * ngModel\n   * ControlValueAccessor\n   */\n\n  // ControlValueAccessor implementation\n  writeValue(value: any) {\n    this.data = value;\n  }\n\n  // Implemented as part of ControlValueAccessor\n  registerOnChange(fn) {\n    this.onChangeModel = fn;\n  }\n\n  // Implemented as part of ControlValueAccessor.\n  registerOnTouched(fn) {\n    this.onTouched = fn;\n  }\n\n  // Implemented as part of ControlValueAccessor.\n  setDisabledState(isDisabled: boolean): void {\n    this.disabled = isDisabled;\n  }\n\n  // Implemented as part of ControlValueAccessor.\n  private onTouched = () => {\n  };\n\n  // Implemented as part of ControlValueAccessor.\n  private onChangeModel = (e) => {\n  };\n\n  public onChange(e) {\n    if (this.editor) {\n      try {\n        const json = this.editor.get();\n        this.onChangeModel(json);\n        this.change.emit(json);\n      } catch (e) {\n        if (this.debug) {\n          console.log(e);\n        }\n      }\n    }\n  }\n\n  public onChangeJSON(e) {\n    if (this.editor) {\n      try {\n        this.jsonChange.emit(this.editor.get());\n      } catch (e) {\n        if (this.debug) {\n          console.log(e);\n        }\n      }\n    }\n  }\n\n\n  /**\n   * JSON EDITOR FUNCTIONS\n   */\n\n  public collapseAll() {\n    this.editor.collapseAll();\n  }\n\n  public expandAll() {\n    this.editor.expandAll();\n  }\n\n  public focus() {\n    this.editor.focus();\n  }\n\n  public get(): JSON {\n    return this.editor.get();\n  }\n\n  public getMode(): JsonEditorMode {\n    return this.editor.getMode() as JsonEditorMode;\n  }\n\n  public getName(): string {\n    return this.editor.getName();\n  }\n\n  public getText(): string {\n    return this.editor.getText();\n  }\n\n  public set(json: JSON) {\n    this.editor.set(json);\n  }\n\n  public setMode(mode: JsonEditorMode) {\n    this.editor.setMode(mode);\n  }\n\n  public setName(name: string) {\n    this.editor.setName(name);\n  }\n\n  public setSelection(start, end) {\n    this.editor.setSelection(start, end);\n  }\n\n  public getSelection(): any {\n    return this.editor.getSelection();\n  }\n\n  public getValidateSchema(): any {\n    return this.editor.validateSchema;\n  }\n\n  public setSchema(schema: any, schemaRefs: any) {\n    this.editor.setSchema(schema, schemaRefs);\n  }\n\n  public search(query: string) {\n    this.editor.search(query);\n  }\n\n  public setOptions(newOptions: JsonEditorOptions) {\n    if (this.editor) {\n      this.editor.destroy();\n    }\n    this.optionsChanged = true;\n    this.options = newOptions;\n    this.ngOnInit();\n  }\n\n  public update(json: JSON) {\n    this.editor.update(json);\n  }\n\n  public destroy() {\n    this.editor.destroy();\n  }\n\n  public getEditor(){\n    return this.editor;\n  }\n\n  public isValidJson() {\n    try {\n      JSON.parse(this.getText());\n      return true;\n    } catch (e) {\n      return false;\n    }\n  }\n}\n\nexport { JsonEditorOptions, JsonEditorMode, JsonEditorTreeNode, IError };\n","import { NgModule, ModuleWithProviders, CUSTOM_ELEMENTS_SCHEMA, NO_ERRORS_SCHEMA } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { JsonEditorComponent } from './jsoneditor/jsoneditor.component';\nimport { FormsModule } from '@angular/forms';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule\n  ],\n  declarations: [\n    JsonEditorComponent\n  ],\n  exports: [\n    JsonEditorComponent\n  ],\n  schemas: [\n    CUSTOM_ELEMENTS_SCHEMA,\n    NO_ERRORS_SCHEMA\n  ]\n})\nexport class NgJsonEditorModule {\n\n  public static forRoot(): ModuleWithProviders<any> {\n\n    return {\n      ngModule: NgJsonEditorModule,\n      providers: [\n      ]\n    };\n  }\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":["EventEmitter","editor","Component","NG_VALUE_ACCESSOR","forwardRef","ChangeDetectionStrategy","ViewChild","Input","Output","NgModule","CommonModule","FormsModule","CUSTOM_ELEMENTS_SCHEMA","NO_ERRORS_SCHEMA"],"mappings":"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"}