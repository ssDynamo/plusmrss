export class JsonEditorOptions {
    constructor() {
        this.enableSort = true;
        this.enableTransform = true;
        this.escapeUnicode = false;
        this.expandAll = false;
        this.sortObjectKeys = false;
        this.history = true;
        this.mode = 'tree';
        this.search = true;
        this.indentation = 2;
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoianNvbmVkaXRvcm9wdGlvbnMuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9hbmctanNvbmVkaXRvci9zcmMvanNvbmVkaXRvci9qc29uZWRpdG9yb3B0aW9ucy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFjQSxNQUFNLE9BQU8saUJBQWlCO0lBMEk1QjtRQUNFLElBQUksQ0FBQyxVQUFVLEdBQUcsSUFBSSxDQUFDO1FBQ3ZCLElBQUksQ0FBQyxlQUFlLEdBQUcsSUFBSSxDQUFDO1FBQzVCLElBQUksQ0FBQyxhQUFhLEdBQUcsS0FBSyxDQUFDO1FBQzNCLElBQUksQ0FBQyxTQUFTLEdBQUcsS0FBSyxDQUFDO1FBQ3ZCLElBQUksQ0FBQyxjQUFjLEdBQUcsS0FBSyxDQUFDO1FBQzVCLElBQUksQ0FBQyxPQUFPLEdBQUcsSUFBSSxDQUFDO1FBQ3BCLElBQUksQ0FBQyxJQUFJLEdBQUcsTUFBTSxDQUFDO1FBQ25CLElBQUksQ0FBQyxNQUFNLEdBQUcsSUFBSSxDQUFDO1FBQ25CLElBQUksQ0FBQyxXQUFXLEdBQUcsQ0FBQyxDQUFDO0lBQ3ZCLENBQUM7Q0FDRiIsInNvdXJjZXNDb250ZW50IjpbIlxuZXhwb3J0IHR5cGUgSnNvbkVkaXRvck1vZGUgPSAndHJlZScgfCAndmlldycgfCAnZm9ybScgfCAnY29kZScgfCAndGV4dCc7XG5cbmV4cG9ydCBpbnRlcmZhY2UgSnNvbkVkaXRvclRyZWVOb2RlIHtcbiAgZmllbGQ6IFN0cmluZyxcbiAgdmFsdWU6IFN0cmluZyxcbiAgcGF0aDogU3RyaW5nW11cbn1cblxuZXhwb3J0IGludGVyZmFjZSBJRXJyb3Ige1xuICBwYXRoOiAoc3RyaW5nIHwgbnVtYmVyKVtdO1xuICBtZXNzYWdlOiBzdHJpbmc7XG59XG5cbmV4cG9ydCBjbGFzcyBKc29uRWRpdG9yT3B0aW9ucyB7XG4gIHB1YmxpYyBhY2U6IGFueTtcbiAgcHVibGljIGFqdjogT2JqZWN0O1xuXG5cbiAgLyoqXG4gICAqICAge2Z1bmN0aW9ufSBvbkNoYW5nZSAgQ2FsbGJhY2sgbWV0aG9kLCB0cmlnZ2VyZWRcbiAgb24gY2hhbmdlIG9mIGNvbnRlbnRzLlxuICBEb2VzIG5vdCBwYXNzIHRoZSBjb250ZW50cyBpdHNlbGYuXG4gIFNlZSBhbHNvIGBvbkNoYW5nZUpTT05gIGFuZFxuICBgb25DaGFuZ2VUZXh0YC5cbiAgICovXG4gIHB1YmxpYyBvbkNoYW5nZTogKCkgPT4gdm9pZDtcblxuICAvKipcbiogICAvLyB7ZnVuY3Rpb259IG9uQ2hhbmdlSlNPTiAgQ2FsbGJhY2sgbWV0aG9kLCB0cmlnZ2VyZWRcbi8vICAgICBpbiBtb2RlcyBvbiBjaGFuZ2Ugb2YgY29udGVudHMsXG4vLyAgICAgcGFzc2luZyB0aGUgY2hhbmdlZCBjb250ZW50c1xuLy8gICAgIGFzIEpTT04uXG4vLyAgICAgT25seSBhcHBsaWNhYmxlIGZvciBtb2Rlc1xuLy8gICAgICd0cmVlJywgJ3ZpZXcnLCBhbmQgJ2Zvcm0nLlxuKi9cbiAgcHVibGljIG9uQ2hhbmdlSlNPTjogKCkgPT4gdm9pZDtcblxuXG4gIHB1YmxpYyBvbk5vZGVOYW1lOiAoKSA9PiB2b2lkO1xuICBwdWJsaWMgb25DcmVhdGVNZW51OiAoKSA9PiB2b2lkO1xuICBwdWJsaWMgb25Db2xvclBpY2tlcjogKCkgPT4gdm9pZDtcblxuICAvKipcbiogICAvLyB7ZnVuY3Rpb259IG9uQ2hhbmdlVGV4dCAgQ2FsbGJhY2sgbWV0aG9kLCB0cmlnZ2VyZWRcbi8vICAgICBpbiBtb2RlcyBvbiBjaGFuZ2Ugb2YgY29udGVudHMsXG4vLyAgICAgcGFzc2luZyB0aGUgY2hhbmdlZCBjb250ZW50c1xuLy8gICAgIGFzIHN0cmluZ2lmaWVkIEpTT04uXG4qL1xuICBwdWJsaWMgb25DaGFuZ2VUZXh0OiAoanNvbnN0cjpzdHJpbmcpID0+IHZvaWQ7XG5cblxuICAvKipcbiAgICogICB7ZnVuY3Rpb259IG9uU2VsZWN0aW9uQ2hhbmdlIENhbGxiYWNrIG1ldGhvZCxcbiAgdHJpZ2dlcmVkIG9uIG5vZGUgc2VsZWN0aW9uIGNoYW5nZVxuICBPbmx5IGFwcGxpY2FibGUgZm9yIG1vZGVzXG4gICd0cmVlJywgJ3ZpZXcnLCBhbmQgJ2Zvcm0nXG4gICAqL1xuICBwdWJsaWMgb25TZWxlY3Rpb25DaGFuZ2U6ICgpID0+IHZvaWQ7XG5cbiAgLyoqXG4qICAgICB7ZnVuY3Rpb259IG9uVGV4dFNlbGVjdGlvbkNoYW5nZSBDYWxsYmFjayBtZXRob2QsXG4gIHRyaWdnZXJlZCBvbiB0ZXh0IHNlbGVjdGlvbiBjaGFuZ2VcbiAgT25seSBhcHBsaWNhYmxlIGZvciBtb2Rlc1xuKi9cbiAgcHVibGljIG9uVGV4dFNlbGVjdGlvbkNoYW5nZTogKCkgPT4gdm9pZDtcblxuXG4gIC8qKlxuICAgKiAgIC8vIHtmdW5jdGlvbn0gb25FdmVudCBDYWxsYmFjayBtZXRob2QsIHRyaWdnZXJlZFxuICAgIC8vIHdoZW4gYW4gZXZlbnQgb2NjdXJzIGluXG4gICAgLy8gYSBKU09OIGZpZWxkIG9yIHZhbHVlLlxuICAgIC8vIE9ubHkgYXBwbGljYWJsZSBmb3JcbiAgICAvLyBtb2RlcyAnZm9ybScsICd0cmVlJyBhbmRcbiAgICAvLyAndmlldydcbiAgICovXG4gIHB1YmxpYyBvbkV2ZW50OiAoKSA9PiB2b2lkO1xuXG4gIC8qKlxuKiAvLyAqICAge2Z1bmN0aW9ufSBvbkZvY3VzICBDYWxsYmFjayBtZXRob2QsIHRyaWdnZXJlZFxuLy8gIHdoZW4gdGhlIGVkaXRvciBjb21lcyBpbnRvIGZvY3VzLFxuLy8gIHBhc3NpbmcgYW4gb2JqZWN0IHt0eXBlLCB0YXJnZXR9LFxuLy8gIEFwcGxpY2FibGUgZm9yIGFsbCBtb2Rlc1xuKi9cbiAgcHVibGljIG9uRm9jdXM6ICgpID0+IHZvaWQ7XG5cbiAgLy8gKiAgIHtmdW5jdGlvbn0gb25CbHVyICAgQ2FsbGJhY2sgbWV0aG9kLCB0cmlnZ2VyZWRcbiAgLy8gIHdoZW4gdGhlIGVkaXRvciBnb2VzIG91dCBvZiBmb2N1cyxcbiAgLy8gIHBhc3NpbmcgYW4gb2JqZWN0IHt0eXBlLCB0YXJnZXR9LFxuICAvLyAgQXBwbGljYWJsZSBmb3IgYWxsIG1vZGVzXG4gIHB1YmxpYyBvbkJsdXI6ICgpID0+IHZvaWQ7XG5cbiAgLyoqXG4qICAvLyAqICAge2Z1bmN0aW9ufSBvbkNsYXNzTmFtZSBDYWxsYmFjayBtZXRob2QsIHRyaWdnZXJlZFxuLy8gd2hlbiBhIE5vZGUgRE9NIGlzIHJlbmRlcmVkLiBGdW5jdGlvbiByZXR1cm5zXG4vLyBhIGNzcyBjbGFzcyBuYW1lIHRvIGJlIHNldCBvbiBhIG5vZGUuXG4vLyBPbmx5IGFwcGxpY2FibGUgZm9yXG4vLyBtb2RlcyAnZm9ybScsICd0cmVlJyBhbmRcbi8vICd2aWV3J1xuKi9cbiAgcHVibGljIG9uQ2xhc3NOYW1lOiAoKSA9PiB2b2lkO1xuXG4gIHB1YmxpYyBvbkVkaXRhYmxlOiAobm9kZTogSnNvbkVkaXRvclRyZWVOb2RlIHwge30pID0+IGJvb2xlYW4gfCB7IGZpZWxkOiBib29sZWFuLCB2YWx1ZTogYm9vbGVhbiB9O1xuXG4gIC8qKlxuICAgKiAgIHtmdW5jdGlvbn0gb25FcnJvciAgIENhbGxiYWNrIG1ldGhvZCwgdHJpZ2dlcmVkXG4gIHdoZW4gYW4gZXJyb3Igb2NjdXJzXG4gICAqL1xuICBwdWJsaWMgb25FcnJvcjogKGVycm9yOiBhbnkpID0+IHZvaWQ7XG4gIHB1YmxpYyBvbk1vZGVDaGFuZ2U6IChuZXdNb2RlOiBKc29uRWRpdG9yTW9kZSwgb2xkTW9kZTogSnNvbkVkaXRvck1vZGUpID0+IHZvaWQ7XG4gIHB1YmxpYyBvblZhbGlkYXRlOiAoanNvbjogT2JqZWN0KSA9PiBJRXJyb3JbXTtcbiAgcHVibGljIG9uVmFsaWRhdGlvbkVycm9yOiAoZXJyb3JzOiBvYmplY3RbXSkgPT4gdm9pZDtcblxuICBwdWJsaWMgZW5hYmxlU29ydDogYm9vbGVhbjtcbiAgcHVibGljIGVuYWJsZVRyYW5zZm9ybTogYm9vbGVhbjtcbiAgcHVibGljIGVzY2FwZVVuaWNvZGU6IGJvb2xlYW47XG4gIHB1YmxpYyBleHBhbmRBbGw6IGJvb2xlYW47XG4gIHB1YmxpYyBzb3J0T2JqZWN0S2V5czogYm9vbGVhbjtcbiAgcHVibGljIGhpc3Rvcnk6IGJvb2xlYW47XG4gIHB1YmxpYyBtb2RlOiBKc29uRWRpdG9yTW9kZTtcbiAgcHVibGljIG1vZGVzOiBKc29uRWRpdG9yTW9kZVtdO1xuICBwdWJsaWMgbmFtZTogU3RyaW5nO1xuICBwdWJsaWMgc2NoZW1hOiBPYmplY3Q7XG4gIHB1YmxpYyBzZWFyY2g6IGJvb2xlYW47XG4gIHB1YmxpYyBpbmRlbnRhdGlvbjogTnVtYmVyO1xuICBwdWJsaWMgdGVtcGxhdGU6IE9iamVjdDtcbiAgcHVibGljIHRoZW1lOiBOdW1iZXI7XG4gIHB1YmxpYyBsYW5ndWFnZTogU3RyaW5nO1xuICBwdWJsaWMgbGFuZ3VhZ2VzOiBPYmplY3Q7XG5cbiAgLyoqXG4gICAqIEFkZHMgbWFpbiBtZW51IGJhciAtIENvbnRhaW5zIGZvcm1hdCwgc29ydCwgdHJhbnNmb3JtLCBzZWFyY2ggZXRjLiBmdW5jdGlvbmFsaXR5LiBUcnVlXG4gICAqIGJ5IGRlZmF1bHQuIEFwcGxpY2FibGUgaW4gYWxsIHR5cGVzIG9mIG1vZGUuXG4gICAqL1xuICBwdWJsaWMgbWFpbk1lbnVCYXI6IGJvb2xlYW47XG5cbiAgLyoqXG4gICAqIEFkZHMgbmF2aWdhdGlvbiBiYXIgdG8gdGhlIG1lbnUgLSB0aGUgbmF2aWdhdGlvbiBiYXIgdmlzdWFsaXplIHRoZSBjdXJyZW50IHBvc2l0aW9uIG9uXG4gICAqIHRoZSB0cmVlIHN0cnVjdHVyZSBhcyB3ZWxsIGFzIGFsbG93cyBicmVhZGNydW1icyBuYXZpZ2F0aW9uLlxuICAgKiBUcnVlIGJ5IGRlZmF1bHQuXG4gICAqIE9ubHkgYXBwbGljYWJsZSB3aGVuIG1vZGUgaXMgJ3RyZWUnLCAnZm9ybScgb3IgJ3ZpZXcnLlxuICAgKi9cbiAgcHVibGljIG5hdmlnYXRpb25CYXI6IGJvb2xlYW47XG5cbiAgLyoqXG4gICAqIEFkZHMgc3RhdHVzIGJhciB0byB0aGUgYm90dG9tIG9mIHRoZSBlZGl0b3IgLSB0aGUgc3RhdHVzIGJhciBzaG93cyB0aGUgY3Vyc29yIHBvc2l0aW9uXG4gICAqIGFuZCBhIGNvdW50IG9mIHRoZSBzZWxlY3RlZCBjaGFyYWN0ZXJzLlxuICAgKiBUcnVlIGJ5IGRlZmF1bHQuXG4gICAqIE9ubHkgYXBwbGljYWJsZSB3aGVuIG1vZGUgaXMgJ2NvZGUnIG9yICd0ZXh0Jy5cbiAgICovXG4gIHB1YmxpYyBzdGF0dXNCYXI6IGJvb2xlYW47XG5cbiAgY29uc3RydWN0b3IoKSB7XG4gICAgdGhpcy5lbmFibGVTb3J0ID0gdHJ1ZTtcbiAgICB0aGlzLmVuYWJsZVRyYW5zZm9ybSA9IHRydWU7XG4gICAgdGhpcy5lc2NhcGVVbmljb2RlID0gZmFsc2U7XG4gICAgdGhpcy5leHBhbmRBbGwgPSBmYWxzZTtcbiAgICB0aGlzLnNvcnRPYmplY3RLZXlzID0gZmFsc2U7XG4gICAgdGhpcy5oaXN0b3J5ID0gdHJ1ZTtcbiAgICB0aGlzLm1vZGUgPSAndHJlZSc7XG4gICAgdGhpcy5zZWFyY2ggPSB0cnVlO1xuICAgIHRoaXMuaW5kZW50YXRpb24gPSAyO1xuICB9XG59XG4iXX0=